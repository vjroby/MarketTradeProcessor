<?php
use App\Exceptions\ValidationException;
use Mockery as m;
/**
 * Created by PhpStorm.
 * User: robert
 * Date: 12.08.2015
 * Time: 21:13
 */
class MessageControllerTest extends TestCase
{
    /**
     * @var Mockery\MockInterface
     */
    protected $messageRepositoryMock;

    public function testPostMessage()
    {
        $this->createMockObjects();
        $this->app->instance("MarketTradeProcessor\Repositories\ArdentMessageRepository", $this->messageRepositoryMock);
        $this->messageRepositoryMock->shouldReceive("manageMessages")->once()->with(new \Symfony\Component\HttpFoundation\ParameterBag($this->getPostMessageDummy()));

        $response =  $this->call("POST", "/message",[],[],[],[], json_encode($this->getPostMessageDummy()));
        $this->assertEquals(\Illuminate\Http\Response::HTTP_CREATED, $response->getStatusCode());
    }

    /**
     * @expectedException ValidationException
     */
    public function testInvalidUserId()
    {

    }
    /**
     * @expectedException ValidationException
     */
    public function testInvalidCurrencyFrom()
    {

    }
    /**
     * @expectedException ValidationException
     */
    public function testInvalidCurrencyTo()
    {

    }
    /**
     * @expectedException ValidationException
     */
    public function testInvalidAmountSell()
    {

    }
    /**
     * @expectedException ValidationException
     */
    public function testInvalidAmountBuy()
    {

    }
    /**
     * @expectedException ValidationException
     */
    public function testInvalidRate()
    {

    }

    /**
     * @expectedException ValidationException
     */
    public function testInvalidTimePlaced()
    {

    }
    /**
     * @expectedException ValidationException
     */
    public function testInvalidOriginatingCountry()
    {

    }



    protected function getPostMessageDummy()
    {
        return [
            "userId"=> "54543",
            "currencyFrom" => "EUR",
            "currencyTo" => "GBP",
            "amountSell" => 1000,
            "amountBuy" => 747.10,
            "rate" =>  0.7471,
            "timePlaced" =>  "12-JUL-15 02:13:23",
            "originatingCountry"=> "RO"
        ];
    }

    public function createMockObjects()
    {
        $this->messageRepositoryMock = m::mock("MarketTradeProcessor\Repositories\ArdentMessageRepository");
    }

    public function run(PHPUnit_Framework_TestResult $result = null)
    {
        $this->createMockObjects();
        return parent::run($result); // TODO: Change the autogenerated stub
    }
}